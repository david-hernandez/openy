<?php

/**
 * @file
 * OpenY Node Activity module file.
 */

/**
 * Implements hook_ENTITY_TYPE_update().
 *
 * This will publish/unpublish Activity nodes when a Category is updated.
 */
function openy_node_activity_node_update(Drupal\Core\Entity\EntityInterface $entity) {
  // Only do this for Category nodes.
  if ($entity->getType() != 'program_subcategory') {
    return;
  }

  // Published will be true, unpublished false.
  $original_status = $entity->original->isPublished();
  $current_status = $entity->isPublished();

  if ($original_status && !$current_status) {
    // Going from published to unpublished.
    $status = false;
  } elseif (!$original_status && $current_status) {
    // Going from unpublished to published.
    $status = true;
  } else {
    // Status was unchanged.
    return;
  }

  $activity_ids = _openy_node_activity_getactivitynodes($entity);
  $batch = [
    'title' => t('Updating activities...'),
    'operations' => [
      [
        '\Drupal\openy_node_activity\ActivityBatchUpdate::updateActivities',
        [
          $activity_ids,
          $status,
        ],
      ],
    ],
    'finished' => '\Drupal\openy_node_activity\ActivityBatchUpdate::finished',
  ];
  batch_set($batch);
}

/**
 * Helper function to retrieve the list of Activity node ids that references this
 * Category node.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The Category node who's Activity nodes will be retrieved.
 *
 * @return array $activity_ids
 *   Array of Activity node ids.
 */
function _openy_node_activity_getactivitynodes(&$entity) {
  $category_id = $entity->id();

  $connection = \Drupal::database();

  $query = $connection->select('node__field_activity_category', 'c');
  $query->condition('c.field_activity_category_target_id', $category_id);
  $query->addField('c', 'entity_id');
  $result = $query->execute()->fetchAllAssoc('entity_id');

  $activity_ids = array_keys($result);
  //$activities = \Drupal::entityTypeManager()->getStorage('node')->loadMultiple($activity_ids);

  return $activity_ids;
}


/*$batch = array(
  'title' => t('Updating activities...'),
  'operations' => array(
    array(
      '\Drupal\batch_example\DeleteNode::deleteNodeExample',
      array($nids)
    ),
  ),
  'finished' => '\Drupal\batch_example\DeleteNode::deleteNodeExampleFinishedCallback',
);
batch_set($batch);
*/
