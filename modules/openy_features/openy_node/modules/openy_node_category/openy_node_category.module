<?php

/**
 * @file
 * OpenY Node Category module file.
 */

/**
 * Implements hook_ENTITY_TYPE_update().
 *
 * This will publish/unpublish Category nodes when a Program is updated.
 */
function openy_node_category_node_update(Drupal\Core\Entity\EntityInterface $entity) {
  // Only do this for Program nodes.
  if ($entity->getType() != 'program') {
    return;
  }

  // Published will be true, unpublished false.
  $original_status = $entity->original->isPublished();
  $current_status = $entity->isPublished();

  // Going from published to unpublished.
  if ($original_status && !$current_status) {
    $categories = _openy_node_category_getcategorynodes($entity);

    // Unpublish all Category nodes.
    foreach ($categories as $node) {
      if ($node->isPublished()) {
        $node->setUnPublished();
        $node->save();
      }
    }
  } elseif (!$original_status && $current_status) {
    // Going from unpublished to published. We have to just publish everything.
    $categories = _openy_node_category_getcategorynodes($entity);

    // Publish all Category nodes.
    foreach ($categories as $node) {
      if (!$node->isPublished()) {
        $node->setPublished();
        $node->save();
      }
    }
  }

}

/**
 * Helper function to retrieve the list of Category nodes that references this
 * Program node.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The Program node who's Category nodes will be retrieved.
 *
 * @return array $categories
 *   Array of Category nodes.
 */
function _openy_node_category_getcategorynodes(&$entity) {
  $program_id = $entity->id();

  $connection = \Drupal::database();

  $query = $connection->select('node__field_category_program', 'p');
  $query->condition('p.field_category_program_target_id', $program_id);
  $query->addField('p', 'entity_id');
  $result = $query->execute()->fetchAllAssoc('entity_id');

  $category_ids = array_keys($result);
  $categories = \Drupal::entityTypeManager()->getStorage('node')->loadMultiple($category_ids);

  return $categories;
}
